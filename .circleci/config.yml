version: 2.1   

jobs:
  build:
    docker:
      - image: conanio/gcc11
    steps:
      - checkout
      - run:
          name: "install building tools"
          command: |
            sudo pip install --upgrade conan 
            conan config set general.revisions_enabled=1
            conan profile new --detect --force default 
            conan profile update settings.compiler.libcxx=libstdc++11 default
            conan profile update settings.compiler.version=10 default
      - run:
          name: "build the code"
          command: |
            mkdir -p build && cd build
            conan install ..
            cmake ..
            make -j 10
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}-{{ .Revision }}
            - source-v1-{{ .Branch }}-
            - source-v1-
      - save_cache:
          key: source-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
            - build
      - persist_to_workspace:
          root: .
          paths: 
           - build/test
           - redis/redis*
  test:
    docker:
      - image: cimg/base:stable
        auth:
          username: nasirim
          password: $DOCKERHUB_PASSWORD
    steps:
      - attach_workspace:
          at: .
      - run:
          name: run redis
          command: |
            wget http://download.redis.io/redis-stable.tar.gz
            tar xvzf redis-stable.tar.gz
            cd redis-stable
            make
            sudo make install
            cd ..
            chmod +x redis/redistimeseries.so
            redis-server "redis/redis.conf" > /tmp/redis.log 2>&1 &
            sleep 10
            cat /tmp/redis.log
      - run:
          name: "run the test"
          command: |
            ./build/test/redis_time_series_test
      - restore_cache:
          keys:
            - v1-make-redis-{{checksum "redis-stable.tar.gz"}}
            - v1-make-redis-
      - save_cache:
          key: v1-make-redis-{{checksum "redis-stable.tar.gz"}}
          paths:
            - redis-stable
      - store_test_results:
          path: build/test

workflows:
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
